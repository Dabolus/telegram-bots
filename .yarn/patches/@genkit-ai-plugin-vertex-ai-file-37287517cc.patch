diff --git a/lib/index.js b/lib/index.js
index a455a6352d181b3226d8a779bdbfd03415bb2e10..024b3e66c46d8bb556c43ddce7feba553f1b0f92 100644
--- a/lib/index.js
+++ b/lib/index.js
@@ -56,7 +56,9 @@ var import_imagen = require("./imagen");
 const vertexAI = (0, import_config.genkitPlugin)(
   "vertex-ai",
   (options) => __async(void 0, null, function* () {
-    const authClient = new import_google_auth_library.GoogleAuth();
+    const authClient = new import_google_auth_library.GoogleAuth({
+      scopes: 'https://www.googleapis.com/auth/cloud-platform'
+    });
     const projectId = (options == null ? void 0 : options.projectId) || (0, import_common.getProjectId)();
     const location = (options == null ? void 0 : options.location) || (0, import_common.getLocation)();
     const confError = (parameter, envVariableName) => {
diff --git a/lib/index.mjs b/lib/index.mjs
index 9baf7e5cba943887c2e0b3430a1113bfc55c5220..b02da91867c48509fd9f2d9de4218b9708517f8d 100644
--- a/lib/index.mjs
+++ b/lib/index.mjs
@@ -16,7 +16,9 @@ import { imagen2, imagen2Model } from "./imagen";
 const vertexAI = genkitPlugin(
   "vertex-ai",
   (options) => __async(void 0, null, function* () {
-    const authClient = new GoogleAuth();
+    const authClient = new GoogleAuth({
+      scopes: 'https://www.googleapis.com/auth/cloud-platform'
+    });
     const projectId = (options == null ? void 0 : options.projectId) || getProjectId();
     const location = (options == null ? void 0 : options.location) || getLocation();
     const confError = (parameter, envVariableName) => {
diff --git a/src/index.ts b/src/index.ts
index a7031cedffd7066389a63f697cdc7612b3df3428..85609a5237eefe7a6ac1563b387265315f50d80a 100644
--- a/src/index.ts
+++ b/src/index.ts
@@ -37,7 +37,9 @@ export interface PluginOptions {
 export const vertexAI: Plugin<[PluginOptions] | []> = genkitPlugin(
   'vertex-ai',
   async (options?: PluginOptions) => {
-    const authClient = new GoogleAuth();
+    const authClient = new GoogleAuth({
+      scopes: 'https://www.googleapis.com/auth/cloud-platform'
+    });
     const projectId = options?.projectId || getProjectId();
     const location = options?.location || getLocation();
 
