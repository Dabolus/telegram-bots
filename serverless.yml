org: dabolus
app: ${env:SERVICE_NAME}
service: ${env:SERVICE_NAME}
frameworkVersion: '2 || 3'
useDotenv: true
variablesResolutionMode: 20210326

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 768
  lambdaHashingVersion: 20201221
  timeout: 10
  environment:
    NODE_OPTIONS: --enable-source-maps

plugins:
  - serverless-esbuild
  - serverless-s3-sync

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    plugins: esbuild-plugins.cjs
    packager: yarn
    exclude:
      - aws-sdk
      - chrome-aws-lambda
      - puppeteer-core
      - sharp
  s3Sync:
    - bucketName: ${env:SERVICE_NAME}-assets
      localDir: assets
      acl: public-read

package:
  individually: true
  # TODO: discover why this isn't working at function level (1/3)
  patterns:
    - 'bots/quote-generator/templates/**'
    - 'bots/telegram-media-convert/static/**'

layers:
  ffmpeg:
    path: layers/ffmpeg/build
  sharp:
    path: layers/sharp/build

functions:
  dabbext:
    handler: bots/dabbext/src/index.handler
    environment:
      BOT_TOKEN: ${env:DABBEXT_BOT_TOKEN}
    events:
      - httpApi:
          path: /bot${env:DABBEXT_BOT_TOKEN}
          method: post
  quote-generator:
    handler: bots/quote-generator/src/index.handler
    memorySize: 1536
    environment:
      ASSETS_BASE_URL: https://${env:SERVICE_NAME}-assets.s3.amazonaws.com
      BOT_TOKEN: ${env:QUOTE_GENERATOR_BOT_TOKEN}
    events:
      - httpApi:
          path: /bot${env:QUOTE_GENERATOR_BOT_TOKEN}
          method: post
    layers:
      - arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:25
    # TODO: discover why this isn't working at function level (2/3)
    # package:
    #   patterns:
    #     - 'bots/quote-generator/templates/**'
  telegram-media-convert:
    handler: bots/telegram-media-convert/src/index.handler
    memorySize: 1536
    timeout: 20
    environment:
      ASSETS_BASE_URL: https://${env:SERVICE_NAME}-assets.s3.amazonaws.com
      BOT_TOKEN: ${env:TELEGRAM_MEDIA_CONVERT_BOT_TOKEN}
    events:
      - httpApi:
          path: /bot${env:TELEGRAM_MEDIA_CONVERT_BOT_TOKEN}
          method: post
    layers:
      - { Ref: FfmpegLambdaLayer }
      - { Ref: SharpLambdaLayer }
    # TODO: discover why this isn't working at function level (3/3)
    # package:
    #   patterns:
    #     - 'bots/telegram-media-convert/static/**'

resources:
  Resources:
    AssetsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:SERVICE_NAME}-assets
        AccessControl: PublicRead
